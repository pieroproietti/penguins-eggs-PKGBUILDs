#!/bin/bash

# setup: install tarballs and create links

if [ "$(id -u)" -eq 0 ]; then
    echo "This script must be run as normal user"
    exit 1
fi

if command -v sudo >/dev/null 2>&1; then
    SUDO='sudo'
else
    SUDO='doas'
fi

# title
clear
echo "setup penguins-eggs on ${EGGS_HOME}"

# start
EGGS_HOME="/opt/penguins-eggs/"
# Controlla se il primo argomento Ã¨ vuoto
if [ -z "$1" ]; then
    echo "You must pass tarballs path"
    exit 1
else
  EGGS_PACKAGE=$1
fi

# estrae e copia in /opt/penguins-eggs
$SUDO rm $EGGS_HOME -rf
tar -xf $EGGS_PACKAGE
mv eggs penguins-eggs
$SUDO mv penguins-eggs /opt/


#  Verifica la distribuzione Linux in uso
if [ -f /etc/os-release ]; then
    . /etc/os-release
    DISTRO=$ID
elif [ -f /etc/lsb-release ]; then
    . /etc/lsb-release
    DISTRO=$DISTRIB_ID
elif [ -f /etc/redhat-release ]; then
    DISTRO=$(awk '{print $1}' /etc/redhat-release)
else
    echo "Distribuzione Linux non riconosciuta."
    exit 1
fi

#####################################
# Install Requirements of the distro
case $DISTRO in
    ALDOS)
        echo "Detected distro ALDOS..."
        $SUDO ./requirements/aldos/install.sh
        ;;

    AlmaLinux|RockyLinux)
        echo "Detected distro AlmaLinux/RockyLinux..."
        $SUDO ./requirements/rocky/install.sh
        ;;

    Alpine)
        echo "Detected distro Alpine..."
        $SUDO ./requirements/alpine/install.sh
        ;;

    Arch)
        echo "Detected distro Arch..."
        $SUDO ./requirements/arch/install.sh
        ;;
    Debian)
        echo "Detected distro Debian..."
        $SUDO ./requirements/debian/install.sh
        ;;
    Devuan)
        echo "Detected distro Devuan..."
        $SUDO ./requirements/devuan/install.sh
        ;;
    Fedora)
        echo "Detected distro Fedora..."
        $SUDO ./requirements/fedora/install.sh
        ;;

    ManjaroLinux|BigLinux|BigCommunity)
        echo "Detected distro Manjaro based..."
        $SUDO ./requirements/manjarolinux/install.sh
        ;;
    
    openmamba)
        echo "Detected distro openmamba..."
        $SUDO ./requirements/openmamba/install.sh
        ;;

    openSUSE)
        echo "Detected distro openSUSE..."
        $SUDO ./requirements/opensuse/install.sh
        ;;

    Ubuntu)
        echo "Detected distro Ubuntu..."
        $SUDO ./requirements/ubuntu/install.sh
        ;;

    *)
        echo "This distro is not supported: $DISTRO"
        exit 1
        ;;
esac        

# recreate links grub/isolinux theme
$SUDO ln -s ${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.full.cfg ${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.cfg 
$SUDO ln -s ${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.full.cfg ${EGGS_HOME}addons/eggs/theme/livecd/isolinux.main.cfg 

# bash completions
if [ -d "/usr/share/bash-completion/completions/" ]; then
    $SUDO ln -s ${EGGS_HOME}scripts/eggs.bash /usr/share/bash-completion/completions/
fi

# zsh completions
if [ -d "/usr/share/zsh/functions/Completion/Zsh/" ]; then
    $SUDO ln -s ${EGGS_HOME}scripts/_eggs /usr/share/zsh/functions/Completion/Zsh/
fi

# icons
if [ -d "/usr/share/icons/" ]; then
    $SUDO ln -s ${EGGS_HOME}assets/eggs.png /usr/share/icons/
fi

# man
if [ -d "/usr/share/man/man1" ]; then
    $SUDO ln -s ${EGGS_HOME}manpages/doc/man/eggs.1.gz /usr/share/man/man1/eggs.1.gz
fi

# desktop links
xdg-user-dirs-update --force
DESKTOP_DIR=$(xdg-user-dir DESKTOP)
cp ${EGGS_HOME}addons/eggs/adapt/applications/eggs-adapt.desktop "${DESKTOP_DIR}"
cp ${EGGS_HOME}assets/penguins-eggs.desktop "${DESKTOP_DIR}"
for f in "$DESKTOP_DIR"/*.desktop; do chmod +x "$f"; gio set -t string "$f" metadata::xfce-exe-checksum "$(sha256sum "$f" | awk '{print $1}')"; done

# basic configuration
$SUDO eggs config -n
